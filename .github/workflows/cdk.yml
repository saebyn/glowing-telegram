name: CDK

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
    types: [opened, reopened, synchronize, ready_for_review]
  workflow_dispatch:
    inputs:
      deploy_cdk:
        description: 'Deploy CDK after synth check'
        required: false
        default: 'false'
        type: boolean

jobs:
  cdk_synth_check:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && !github.event.pull_request.draft) || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: cdk/package-lock.json
      - name: Install CDK dependencies
        run: |
          cd cdk
          npm ci
      - name: Build CDK
        run: |
          cd cdk
          npm run build
      - name: Run CDK tests
        run: |
          cd cdk
          npm test
      - name: Validate CDK synth
        run: |
          cd cdk
          npm run cdk synth
        env:
          AWS_DEFAULT_REGION: us-east-1
          AWS_REGION: us-east-1

  deploy_cdk:
    needs: cdk_synth_check
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.deploy_cdk == 'true'
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: >-
            arn:aws:iam::159222827421:role/GlowingTelegram-DockerGithubActionRole
          aws-region: us-west-2
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: cdk/package-lock.json
      - name: Install CDK dependencies
        run: |
          cd cdk
          npm ci
      - name: Build CDK
        run: |
          cd cdk
          npm run build
      - name: Deploy CDK
        run: |
          cd cdk
          npm run cdk -- deploy --all --require-approval never
        env:
          AWS_DEFAULT_REGION: us-west-2
          AWS_REGION: us-west-2