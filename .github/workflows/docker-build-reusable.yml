name: Reusable Docker Build

on:
  workflow_call:
    inputs:
      build_batch1:
        description: 'Build batch 1 services'
        required: false
        type: boolean
        default: true
      build_batch2:
        description: 'Build batch 2 services'
        required: false
        type: boolean
        default: true
      push_images:
        description: 'Push images to registry'
        required: false
        type: boolean
        default: false
      image_tag:
        description: 'Image tag to use'
        required: false
        type: string
        default: 'latest'
      aws_region:
        description: 'AWS region'
        required: false
        type: string
        default: 'us-west-2'
      registry:
        description: 'ECR registry URL'
        required: false
        type: string
        default: '159222827421.dkr.ecr.us-west-2.amazonaws.com'
      aws_role_arn:
        description: 'AWS IAM role ARN for authentication'
        required: false
        type: string
        default: 'arn:aws:iam::159222827421:role/GlowingTelegram-DockerGithubActionRole'
  workflow_dispatch:
    inputs:
      build_batch1:
        description: 'Build batch 1 services'
        required: false
        type: boolean
        default: true
      build_batch2:
        description: 'Build batch 2 services'
        required: false
        type: boolean
        default: true
      push_images:
        description: 'Push images to registry'
        required: false
        type: boolean
        default: false
      image_tag:
        description: 'Image tag to use'
        required: false
        type: string
        default: 'latest'
      aws_region:
        description: 'AWS region'
        required: false
        type: string
        default: 'us-west-2'
      registry:
        description: 'ECR registry URL'
        required: false
        type: string
        default: '159222827421.dkr.ecr.us-west-2.amazonaws.com'
      aws_role_arn:
        description: 'AWS IAM role ARN for authentication'
        required: false
        type: string
        default: 'arn:aws:iam::159222827421:role/GlowingTelegram-DockerGithubActionRole'

env:
  REGISTRY: ${{ inputs.registry }}

jobs:
  docker-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Patch Docker Daemon data-root
        run: |
          DOCKER_DATA_ROOT='/mnt/var/lib/docker'
          DOCKER_DAEMON_JSON='/etc/docker/daemon.json'
          sudo mkdir -p "${DOCKER_DATA_ROOT}"
          jq --arg dataroot "${DOCKER_DATA_ROOT}" '. + {"data-root": $dataroot}' "${DOCKER_DAEMON_JSON}" > "/tmp/docker.json.tmp"
          sudo mv "/tmp/docker.json.tmp" "${DOCKER_DAEMON_JSON}"
          sudo systemctl restart docker
        
      - name: Configure AWS credentials
        if: ${{ inputs.push_images }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.aws_role_arn }}
          aws-region: ${{ inputs.aws_region }}

      - name: Log in to Amazon ECR
        if: ${{ inputs.push_images }}
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker images (Batch 1)
        if: ${{ inputs.build_batch1 }}
        uses: docker/bake-action@v5
        with:
          files: |
            ./docker-bake.hcl
            ./docker-bake.override.hcl
          targets: batch1
          push: ${{ inputs.push_images }}
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
        env:
          IMAGE_TAG: ${{ inputs.image_tag }}

      - name: Build and push Docker images (Batch 2)
        if: ${{ inputs.build_batch2 }}
        uses: docker/bake-action@v5
        with:
          files: |
            ./docker-bake.hcl
            ./docker-bake.override.hcl
          targets: batch2
          push: ${{ inputs.push_images }}
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
        env:
          IMAGE_TAG: ${{ inputs.image_tag }}

      - name: Display build summary
        run: |
          echo "## Docker Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Batch 1 built**: ${{ inputs.build_batch1 }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Batch 2 built**: ${{ inputs.build_batch2 }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Images pushed**: ${{ inputs.push_images }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Image tag**: ${{ inputs.image_tag }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Registry**: ${{ inputs.registry }}" >> $GITHUB_STEP_SUMMARY
