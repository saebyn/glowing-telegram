name: Build and Test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
    types: [opened, reopened, synchronize, ready_for_review]

env:
  CARGO_TERM_COLOR: "always"
  RUST_CHANNEL: "stable"

jobs:
  rust_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        run: |
          rustup update --no-self-update ${{ env.RUST_CHANNEL }}
          rustup component add --toolchain ${{ env.RUST_CHANNEL }} rustfmt rust-src
          rustup default ${{ env.RUST_CHANNEL }}
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose
  clippy_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        run: |
          rustup update --no-self-update ${{ env.RUST_CHANNEL }}
          rustup component add --toolchain ${{ env.RUST_CHANNEL }} rustfmt rust-src clippy
          rustup default ${{ env.RUST_CHANNEL }}
      - uses: crusty-pie/clippy@v1
        with:
          args: --all-features --all-targets
  cdk_synth_check:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && !github.event.pull_request.draft)
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: cdk/package-lock.json
      - name: Install CDK dependencies
        run: |
          cd cdk
          npm ci
      - name: Build CDK
        run: |
          cd cdk
          npm run build
      - name: Run CDK tests
        run: |
          cd cdk
          npm test
      - name: Validate CDK synth
        run: |
          cd cdk
          npx cdk synth --version-reporting=false
        env:
          AWS_DEFAULT_REGION: us-east-1
          AWS_REGION: us-east-1
