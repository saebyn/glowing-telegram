name: Build and Push Docker Images, Deploy CDK

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      image_version:
        description: 'Image version/tag to use'
        required: true
        type: string
      deploy_cdk:
        description: 'Deploy CDK after building images'
        required: false
        default: true
        type: boolean

env:
  REGISTRY: 159222827421.dkr.ecr.us-west-2.amazonaws.com

jobs:
  build-and-push:
    uses: ./.github/workflows/docker-build-reusable.yml
    with:
      build_batch1: true
      build_batch2: true
      push_images: true
      image_tag: ${{ github.event_name == 'release' && github.ref_name || github.event.inputs.image_version }}
      aws_region: us-west-2
      registry: 159222827421.dkr.ecr.us-west-2.amazonaws.com
      aws_role_arn: arn:aws:iam::159222827421:role/GlowingTelegram-DockerGithubActionRole
    permissions:
      contents: read
      id-token: write

  deploy-cdk:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.deploy_cdk == 'true')
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: >-
            arn:aws:iam::159222827421:role/GlowingTelegram-DockerGithubActionRole
          aws-region: us-west-2

      - name: Setup Node.js for CDK
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: cdk/package-lock.json

      - name: Install CDK dependencies
        run: |
          cd cdk
          npm ci

      - name: Build CDK
        run: |
          cd cdk
          npm run build

      - name: Deploy CDK with new image version
        run: |
          cd cdk
          npm run cdk -- deploy --all --require-approval never
        env:
          IMAGE_VERSION: ${{ github.event_name == 'release' && github.ref_name || github.event.inputs.image_version }}
          AWS_DEFAULT_REGION: us-west-2
          AWS_REGION: us-west-2
