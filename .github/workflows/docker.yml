name: Build and Push Docker Images, Deploy CDK

on:
  release:
    types: [published]

env:
  REGISTRY: 159222827421.dkr.ecr.us-west-2.amazonaws.com

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: >-
            arn:aws:iam::159222827421:role/GlowingTelegram-DockerGithubActionRole
          aws-region: us-west-2

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker images (Batch 1)
        uses: docker/bake-action@v5
        with:
          files: |
            ./docker-bake.hcl
            ./docker-bake.override.hcl
          targets: batch1
          push: true
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
        env:
          IMAGE_TAG: ${{ github.ref_name }}

      - name: Build and push Docker images (Batch 2)
        uses: docker/bake-action@v5
        with:
          files: |
            ./docker-bake.hcl
            ./docker-bake.override.hcl
          targets: batch2
          push: true
          set: |
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
        env:
          IMAGE_TAG: ${{ github.ref_name }}

      - name: Setup Node.js for CDK
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: cdk/package-lock.json

      - name: Install CDK dependencies
        run: |
          cd cdk
          npm ci

      - name: Build CDK
        run: |
          cd cdk
          npm run build

      - name: Deploy CDK with new image version
        run: |
          cd cdk
          npm run cdk -- deploy --all --require-approval never
        env:
          IMAGE_VERSION: ${{ github.ref_name }}
          AWS_DEFAULT_REGION: us-west-2
          AWS_REGION: us-west-2
