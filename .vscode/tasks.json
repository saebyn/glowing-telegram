{
  // See https://go.microsoft.com/fwlink/?LinkId=733558
  // for the documentation about the tasks.json format
  "version": "2.0.0",
  "inputs": [
    {
      "id": "service",
      "type": "pickString",
      "description": "The name of the service to run",
      "options": [
        "crud_api",
        "ai_chat_lambda",
        "summarize_transcription",
        "audio_transcriber",
        "video_ingestor",
        "twitch_lambda",
        "youtube_lambda",
        "media_lambda",
        "render_job"
      ]
    },
    {
      "id": "migration_name",
      "type": "promptString",
      "description": "The name of the migration"
    }
  ],
  "tasks": [
    {
      "label": "cdk deploy '*'",
      "type": "shell",
      "options": {
        "cwd": "${workspaceFolder}/cdk",
        "env": {
          "AWS_PROFILE": "glowing-telegram-admin",
          "AWS_REGION": "us-west-2",
          "AWS_ACCOUNT_ID": "159222827421",
        }
      },
      "command": "cdk deploy '*'",
      "group": "build",
      "problemMatcher": []
    },
    {
      "label": "cdk diff",
      "type": "shell",
      "options": {
        "cwd": "${workspaceFolder}/cdk",
        "env": {
          "AWS_PROFILE": "glowing-telegram-admin",
          "AWS_REGION": "us-west-2",
          "AWS_ACCOUNT_ID": "159222827421",
        }
      },
      "command": "cdk diff",
      "group": "build",
      "problemMatcher": []
    },
    {
      "label": "generate types from api schema",
      "type": "shell",
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "command": "./types/import.sh",
      "group": "build",
      "problemMatcher": []
    },
    {
      "label": "build and deploy container",
      "type": "shell",
      "options": {
        "cwd": "${workspaceFolder}",
        "env": {
          "AWS_PROFILE": "glowing-telegram-admin",
          "AWS_REGION": "us-west-2",
          "AWS_ACCOUNT_ID": "159222827421",
        }
      },
      "command": "./scripts/push_image.sh ${input:service}",
      "group": "build",
      "problemMatcher": []
    },
    {
      "label": "cargo watch",
      "type": "shell",
      "options": {
        "cwd": "${workspaceFolder}/${input:service}",
        "env": {
          "PORT": "8789",
        }
      },
      "command": "cargo watch -x run",
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "problemMatcher": []
    }
  ]
}