[workspace]
resolver = "2"
members = [
  "gt_ffmpeg",
  "video_ingestor",
  "audio_transcriber",
  "summarize_transcription",
  "crud_api",
  "ai_chat_lambda",
  "types",
  "twitch_lambda",
  "render_job",
  "gt_secrets",
  "gt_axum",
  "youtube_lambda",
  "upload_video",
  "gt_app",
  "chat_processor_lambda", "embedding_service",
]

[workspace.package]
authors = ["saebyn <saebynx@gmail.com>"]
repository = "https://github.com/saebyn/glowing-telegram"
license = "AGPL-3.0"
readme = "./README.md"
keywords = ["rust", "glowing-telegram", "twitch", "lambda"]
categories = ["web-programming"]

[workspace.dependencies]
types = { path = "./types" }
gt_secrets = { path = "./gt_secrets" }
gt_axum = { path = "./gt_axum" }
gt_app = { path = "./gt_app" }
aws-config = "1.6.3"
aws-sdk-secretsmanager = { version = "1.86.0" }
aws-sdk-s3 = { version = "1.106.0" }
aws-sdk-dynamodb = { version = "1.93.0" }
serde_dynamo = { version = "4", features = ["aws-sdk-dynamodb+1"] }
aws_lambda_events = "0.16"
axum-aws-lambda = "0.9.0"
lambda_runtime = "0.13"
axum = "0.7"
lambda_http = { version = "0.13", features = [
  "apigw_http",
  "apigw_websockets",
] }
tower-http = { version = "0.6", features = [
  "compression-gzip",
  "compression-deflate",
  "trace",
  "cors",
] }
serde = { version = "1.0.226", features = ["derive"] }
serde_json = "1.0.145"
tokio = { version = "1.47.1", features = ["full"] }
figment = { version = "0.10.19", features = ["env"] }
tracing = "0.1.41"
tracing-subscriber = { version = "0.3.20", features = ["env-filter"] }
openai_dive = "0.7.5"
reqwest = { version = "0.12.23", features = ["json"] }
redact = { version = "0.1.11", features = ["serde"] }
chrono = { version = "0.4.42", features = ["serde"] }
uuid = { version = "1.18", features = ["v7", "fast-rng"] }

[profile.release]
strip = true

[workspace.lints.clippy]
# Lint groups
# These have a priority of -1 to ensure that individual
# Lints override them, if present.
pedantic = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }
cargo = { level = "warn", priority = -1 }
perf = { level = "warn", priority = -1 }
complexity = { level = "warn", priority = -1 }
correctness = { level = "deny", priority = -1 }
style = { level = "warn", priority = -1 }
